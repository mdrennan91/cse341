{
  "swagger": "2.0",
  "info": {
    "title": "Cars & Albums API",
    "description": "This API handles cars and albums data.",
    "version": "1.0.0"
  },
  "host": "cse341-qczx.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/albums/": {
      "get": {
        "tags": [
          "Albums"
        ],
        "description": "Fetches all albums",
        "responses": {
          "200": {
            "description": "An array of albums is returned."
          },
          "204": {
            "description": "No albums found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Albums"
        ],
        "description": "Creates a new album",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "albumName": {
                  "example": "The Dark Side of the Moon"
                },
                "artist": {
                  "example": "Pink Floyd"
                },
                "releaseDate": {
                  "example": "1973-03-01"
                },
                "genre": {
                  "example": "Progressive Rock"
                },
                "recordLabel": {
                  "example": "Harvest Records"
                },
                "numberOfTracks": {
                  "example": "10"
                },
                "duration": {
                  "example": "43:00"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Album successfully created."
          },
          "400": {
            "description": "Bad request. Invalid or missing album data."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/albums/{id}": {
      "get": {
        "tags": [
          "Albums"
        ],
        "description": "Fetches single album by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the album to fetch.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Album found and returned."
          },
          "204": {
            "description": "No album found with the provided ID."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Albums"
        ],
        "description": "Modifies or updates an existing album",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the album to update.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated album data in JSON format.",
            "schema": {
              "type": "object",
              "properties": {
                "albumName": {
                  "example": "The Dark Side of the Moon"
                },
                "artist": {
                  "example": "Pink Floyd"
                },
                "releaseDate": {
                  "example": "1973-03-01"
                },
                "genre": {
                  "example": "Progressive Rock"
                },
                "recordLabel": {
                  "example": "Harvest Records"
                },
                "numberOfTracks": {
                  "example": "10"
                },
                "duration": {
                  "example": "43:00"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Album successfully updated."
          },
          "400": {
            "description": "Bad request. Invalid or missing album data."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Albums"
        ],
        "description": "Deletes an album by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the album to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Album successfully deleted."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cars/": {
      "get": {
        "tags": [
          "Cars"
        ],
        "description": "Fetches all cars. Returns an array of car objects.",
        "responses": {
          "200": {
            "description": "An array of cars is returned."
          },
          "204": {
            "description": "No cars found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Cars"
        ],
        "description": "Creates new car",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Car data in JSON format.",
            "schema": {
              "type": "object",
              "properties": {
                "modelName": {
                  "example": "Model S"
                },
                "manufacturer": {
                  "example": "Tesla"
                },
                "year": {
                  "example": "2021"
                },
                "engineType": {
                  "example": "Electric"
                },
                "fuelEfficiency": {
                  "example": "120"
                },
                "price": {
                  "example": "79990"
                },
                "horsepower": {
                  "example": "1020"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Car successfully created."
          },
          "400": {
            "description": "Bad request. Invalid or missing car data."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "description": "Fetches a single car by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the car to fetch.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Car found and returned."
          },
          "204": {
            "description": "No car found with the provided ID."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Cars"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "modelName": {
                  "example": "Model S"
                },
                "manufacturer": {
                  "example": "Tesla"
                },
                "year": {
                  "example": "2021"
                },
                "engineType": {
                  "example": "Electric"
                },
                "fuelEfficiency": {
                  "example": "120"
                },
                "price": {
                  "example": "79990"
                },
                "horsepower": {
                  "example": "1020"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Car successfully updated."
          },
          "400": {
            "description": "Bad request. Invalid or missing car data."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Cars"
        ],
        "description": "Deletes a car by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the car to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Car successfully deleted."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Car": {
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "example": "Model S"
        },
        "manufacturer": {
          "type": "string",
          "example": "Tesla"
        },
        "year": {
          "type": "number",
          "example": 2021
        },
        "engineType": {
          "type": "string",
          "example": "Electric"
        },
        "fuelEfficiency": {
          "type": "number",
          "example": 120
        },
        "price": {
          "type": "number",
          "example": 79990
        },
        "horsepower": {
          "type": "number",
          "example": 1020
        }
      }
    },
    "Album": {
      "type": "object",
      "properties": {
        "albumName": {
          "type": "string",
          "example": "Nevermind"
        },
        "artist": {
          "type": "string",
          "example": "Nirvana"
        },
        "releaseDate": {
          "type": "string",
          "example": "1991-09-24"
        },
        "genre": {
          "type": "string",
          "example": "Alternative Rock"
        },
        "recordLabel": {
          "type": "string",
          "example": "DGC"
        },
        "numberOfTracks": {
          "type": "number",
          "example": 17
        },
        "duration": {
          "type": "string",
          "example": "42:36"
        }
      }
    }
  }
}